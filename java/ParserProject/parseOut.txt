********************************************************************************
Jacob M. Student, CSCI4200, Fall 2019, Parser
********************************************************************************
Parsing the statement: sumTotal = (47 + sum	) / total
Next Token is: IDENT               next lexeme is sumTotal
Enter <factor>
Next Token is: ASSIGN_OP           next lexeme is =
Exit <factor>
Enter <assign>
Next Token is: LEFT_PAREN          next lexeme is (
Enter <expr>
Enter <term>
Enter <factor>
Next Token is: INT_LIT             next lexeme is 47
Enter <expr>
Enter <term>
Enter <factor>
Next Token is: ADD_OP              next lexeme is +
Exit <factor>
Exit <term>
Next Token is: IDENT               next lexeme is sum
Enter <term>
Enter <factor>
Next Token is: RIGHT_PAREN         next lexeme is )
Exit <factor>
Exit <term>
Exit <expr>
Next Token is: DIV_OP              next lexeme is /
Exit <factor>
Next Token is: IDENT               next lexeme is total
Enter <factor>
Exit <factor>
Exit <term>
Exit <expr>
Exit <assign>
********************************************************************************
Parsing the statement: 	Area = (length+width) * 2
Next Token is: IDENT               next lexeme is Area
Enter <factor>
Next Token is: ASSIGN_OP           next lexeme is =
Exit <factor>
Enter <assign>
Next Token is: LEFT_PAREN          next lexeme is (
Enter <expr>
Enter <term>
Enter <factor>
Next Token is: IDENT               next lexeme is length
Enter <expr>
Enter <term>
Enter <factor>
Next Token is: ADD_OP              next lexeme is +
Exit <factor>
Exit <term>
Next Token is: IDENT               next lexeme is width
Enter <term>
Enter <factor>
Next Token is: RIGHT_PAREN         next lexeme is )
Exit <factor>
Exit <term>
Exit <expr>
Next Token is: MULT_OP             next lexeme is *
Exit <factor>
Next Token is: INT_LIT             next lexeme is 2
Enter <factor>
Exit <factor>
Exit <term>
Exit <expr>
Exit <assign>
********************************************************************************
Parsing the statement: C	=		age - 5 * (D / C)
Next Token is: IDENT               next lexeme is C
Enter <factor>
Next Token is: ASSIGN_OP           next lexeme is =
Exit <factor>
Enter <assign>
Next Token is: IDENT               next lexeme is age
Enter <expr>
Enter <term>
Enter <factor>
Next Token is: SUB_OP              next lexeme is -
Exit <factor>
Exit <term>
Next Token is: INT_LIT             next lexeme is 5
Enter <term>
Enter <factor>
Next Token is: MULT_OP             next lexeme is *
Exit <factor>
Next Token is: LEFT_PAREN          next lexeme is (
Enter <factor>
Next Token is: IDENT               next lexeme is D
Enter <expr>
Enter <term>
Enter <factor>
Next Token is: DIV_OP              next lexeme is /
Exit <factor>
Next Token is: IDENT               next lexeme is C
Enter <factor>
Next Token is: RIGHT_PAREN         next lexeme is )
Exit <factor>
Exit <term>
Exit <expr>
Exit <factor>
Exit <term>
Exit <expr>
Exit <assign>
********************************************************************************
END_OF_FILE
